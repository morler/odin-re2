name=simple_literal
pattern=hello
text=hello world
should_compile=true
should_match=true
verify_full_match=true
expected=hello
description=Basic literal match at start of text
---
name=literal_not_found
pattern=xyz
text=hello world
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Literal pattern not present in text
---
name=empty_pattern
pattern=
text=any text at all
should_compile=true
should_match=true
verify_full_match=true
expected=
description=Empty pattern should match trivially at position zero
---
name=empty_text
pattern=hello
text=
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Non-empty pattern cannot match empty text
---
name=literals_with_metacharacters
pattern=a\\.b\\*c\\+
text=prefix a.b*c+ suffix
should_compile=true
should_match=true
verify_full_match=true
expected=a.b*c+
description=Metacharacters escaped to behave as literals
---
name=case_sensitive_fail
pattern=Hello
text=hello
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Regex engine is case sensitive by default
---
name=begin_anchor
pattern=^begin
text=begin here
should_compile=true
should_match=true
verify_full_match=true
expected=begin
description=Start anchor should match at beginning
---
name=begin_anchor_fail
pattern=^begin
text=we begin later
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Start anchor should not match when pattern is not at index zero
---
name=end_anchor
pattern=end$
text=reach the end
should_compile=true
should_match=true
verify_full_match=true
expected=end
description=End anchor should match at end of text
---
name=end_anchor_fail
pattern=end$
text=endings are tricky
should_compile=true
should_match=false
verify_full_match=false
expected=
description=End anchor should fail when pattern not at end
---
name=both_anchors
pattern=^exact match$
text=exact match
should_compile=true
should_match=true
verify_full_match=true
expected=exact match
description=Anchored pattern covering entire string
---
name=char_class_simple
pattern=[abc]
text=b
should_compile=true
should_match=true
verify_full_match=true
expected=b
description=Character class matches single allowed character
---
name=char_class_range
pattern=[a-f]
text=m
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Character outside specified range must fail
---
name=char_class_negated
pattern=[^0-9]
text=a
should_compile=true
should_match=true
verify_full_match=true
expected=a
description=Negated character class excluding digits
---
name=char_class_fail
pattern=[abc]
text=z
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Character class should fail when no characters match
---
name=dot_wildcard
pattern=h.llo
text=hallo
should_compile=true
should_match=true
verify_full_match=true
expected=hallo
description=Dot wildcard should match any single character
---
name=star_quantifier_zero
pattern=ab*c
text=ac
should_compile=true
should_match=true
verify_full_match=true
expected=ac
description=Star quantifier can match zero repetitions
---
name=star_quantifier_many
pattern=ab*c
text=abbbbc
should_compile=true
should_match=true
verify_full_match=true
expected=abbbbc
description=Star quantifier should match multiple repetitions
---
name=plus_quantifier_one
pattern=ab+c
text=abc
should_compile=true
should_match=true
verify_full_match=true
expected=abc
description=Plus quantifier requires at least one occurrence
---
name=plus_quantifier_fail
pattern=ab+c
text=ac
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Plus quantifier must fail when no repetitions present
---
name=question_quantifier_present
pattern=ab?c
text=abc
should_compile=true
should_match=true
verify_full_match=true
expected=abc
description=Question mark allows optional single occurrence
---
name=question_quantifier_absent
pattern=ab?c
text=ac
should_compile=true
should_match=true
verify_full_match=true
expected=ac
description=Question mark should succeed when optional part missing
---
name=alternation_first
pattern=cat|dog|bird
text=cat
should_compile=true
should_match=true
verify_full_match=true
expected=cat
description=Alternation should match first branch
---
name=alternation_second
pattern=cat|dog|bird
text=dog
should_compile=true
should_match=true
verify_full_match=true
expected=dog
description=Alternation should match second branch
---
name=alternation_fail
pattern=cat|dog|bird
text=ferret
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Alternation must fail when none of the branches match
---
name=simple_group
pattern=(ab)+
text=abab
should_compile=true
should_match=true
verify_full_match=true
expected=abab
description=Grouping with plus quantifier should match repeated sequences
---
name=nested_group
pattern=(a(b)c)+
text=abcabc
should_compile=true
should_match=true
verify_full_match=true
expected=abcabc
description=Nested grouping ensures inner structure works
---
name=repeat_range_match
pattern=a{2,4}
text=aaab
should_compile=true
should_match=true
verify_full_match=true
expected=aaa
description=Range quantifier should match within specified bounds
---
name=repeat_range_fail
pattern=a{3,5}
text=aa
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Range quantifier must fail when minimum not satisfied
---
name=repeat_exact
pattern=a{4}
text=aaaab
should_compile=true
should_match=true
verify_full_match=true
expected=aaaa
description=Exact quantifier should match fixed number of repetitions
---
name=word_boundary
pattern=\\bword\\b
text=this word is isolated
should_compile=true
should_match=true
verify_full_match=true
expected=word
description=Word boundary should capture isolated word
---
name=word_boundary_fail
pattern=\\bword\\b
text=swordplay
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Word boundary prevents matching inside other words
---
name=unicode_literal
pattern=hÃ©lÃ¨ne
text=bonjour hÃ©lÃ¨ne
should_compile=true
should_match=true
verify_full_match=true
expected=hÃ©lÃ¨ne
description=Engine should handle UTF-8 literals
---
name=unicode_emoji
pattern=ðŸ˜Š
text=faces ðŸ˜Š everywhere
should_compile=true
should_match=true
verify_full_match=true
expected=ðŸ˜Š
description=Match Unicode emoji character
---
name=invalid_pattern
pattern=(unclosed
text=anything
should_compile=false
should_match=false
verify_full_match=false
expected=
description=Compiler must reject unterminated group
---
name=escape_digit
pattern=\\d+
text=item 1234
should_compile=true
should_match=true
verify_full_match=true
expected=1234
description=Digit escape should find consecutive digits
---
name=escape_whitespace
pattern=\\s+
text=tab	detected
should_compile=true
should_match=true
verify_full_match=false
expected=
description=Whitespace escape should match tab character
---
name=escape_word_char
pattern=\\w+
text=+++token+++ 
should_compile=true
should_match=true
verify_full_match=true
expected=token
description=Word character escape should capture alphanumeric sequence
---
name=dotall_fail
pattern=a.*b
text=a\nc\nb
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Dot should not cross newlines without appropriate flag
---
name=lazy_quantifier
pattern=a.*?b
text=xa123b45b
should_compile=true
should_match=true
verify_full_match=true
expected=a123b
description=Lazy quantifier should stop at first opportunity
---
name=backreference_not_supported
pattern=(a)b\\1
text=aba
should_compile=true
should_match=false
verify_full_match=false
expected=
description=Backreferences are not supported and should fail to match
